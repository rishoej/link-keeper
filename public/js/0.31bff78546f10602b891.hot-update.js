webpackHotUpdate(0,{

/***/ 69:
/***/ (function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.facebookLogin = facebookLogin;\nexports.twitterLogin = twitterLogin;\nexports.googleLogin = googleLogin;\nexports.link = link;\nexports.unlink = unlink;\n\nvar _url = __webpack_require__(582);\n\nvar _url2 = _interopRequireDefault(_url);\n\nvar _querystring = __webpack_require__(259);\n\nvar _querystring2 = _interopRequireDefault(_querystring);\n\nvar _moment = __webpack_require__(1);\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _reactCookie = __webpack_require__(260);\n\nvar _reactCookie2 = _interopRequireDefault(_reactCookie);\n\nvar _reactRouter = __webpack_require__(33);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Sign in with Facebook\nfunction facebookLogin() {\n  var facebook = {\n    url: '/auth/facebook',\n    clientId: '980220002068787',\n    redirectUri: '/auth/facebook/callback',\n    authorizationUrl: 'https://www.facebook.com/v2.5/dialog/oauth',\n    scope: 'email,user_location',\n    width: 580,\n    height: 400\n  };\n\n  return function (dispatch) {\n    oauth2(facebook, dispatch).then(openPopup).then(pollPopup).then(exchangeCodeForToken).then(signIn).then(closePopup);\n  };\n}\n\n// Sign in with Twitter\nfunction twitterLogin() {\n  var twitter = {\n    url: '/auth/twitter',\n    redirectUri: '/auth/twitter/callback',\n    authorizationUrl: 'https://api.twitter.com/oauth/authenticate'\n  };\n\n  return function (dispatch) {\n    oauth1(twitter, dispatch).then(openPopup).then(getRequestToken).then(pollPopup).then(exchangeCodeForToken).then(signIn).then(closePopup);\n  };\n}\n\n// Sign in with Google\nfunction googleLogin() {\n  var google = {\n    url: '/auth/google',\n    clientId: '814958990796-p1centjebv1k0htp3am05tfg5k10nl0k.apps.googleusercontent.com',\n    redirectUri: '/auth/google/callback',\n    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth',\n    scope: 'openid profile email',\n    width: 452,\n    height: 633\n  };\n\n  return function (dispatch) {\n    oauth2(google, dispatch).then(openPopup).then(pollPopup).then(exchangeCodeForToken).then(signIn).then(closePopup);\n  };\n}\n\n// Link account\nfunction link(provider) {\n  switch (provider) {\n    case 'facebook':\n      return facebookLogin();\n    case 'twitter':\n      return twitterLogin();\n    case 'google':\n      return googleLogin();\n    default:\n      return {\n        type: 'LINK_FAILURE',\n        messages: [{ msg: 'Invalid OAuth Provider' }]\n      };\n  }\n}\n\n// Unlink account\nfunction unlink(provider) {\n  return function (dispatch) {\n    return fetch('/unlink/' + provider).then(function (response) {\n      if (response.ok) {\n        return response.json().then(function (json) {\n          dispatch({\n            type: 'UNLINK_SUCCESS',\n            messages: [json]\n          });\n        });\n      } else {\n        return response.json().then(function (json) {\n          dispatch({\n            type: 'UNLINK_FAILURE',\n            messages: [json]\n          });\n        });\n      }\n    });\n  };\n}\n\nfunction oauth2(config, dispatch) {\n  return new Promise(function (resolve, reject) {\n    var params = {\n      client_id: config.clientId,\n      redirect_uri: config.redirectUri,\n      scope: config.scope,\n      display: 'popup',\n      response_type: 'code'\n    };\n    var url = config.authorizationUrl + '?' + _querystring2.default.stringify(params);\n    resolve({ url: url, config: config, dispatch: dispatch });\n  });\n}\n\nfunction oauth1(config, dispatch) {\n  return new Promise(function (resolve, reject) {\n    resolve({ url: 'about:blank', config: config, dispatch: dispatch });\n  });\n}\n\nfunction openPopup(_ref) {\n  var url = _ref.url,\n      config = _ref.config,\n      dispatch = _ref.dispatch;\n\n  return new Promise(function (resolve, reject) {\n    var width = config.width || 500;\n    var height = config.height || 500;\n    var options = {\n      width: width,\n      height: height,\n      top: window.screenY + (window.outerHeight - height) / 2.5,\n      left: window.screenX + (window.outerWidth - width) / 2\n    };\n    var popup = window.open(url, '_blank', _querystring2.default.stringify(options, ','));\n\n    if (url === 'about:blank') {\n      popup.document.body.innerHTML = 'Loading...';\n    }\n\n    resolve({ window: popup, config: config, dispatch: dispatch });\n  });\n}\n\nfunction getRequestToken(_ref2) {\n  var window = _ref2.window,\n      config = _ref2.config,\n      dispatch = _ref2.dispatch;\n\n  return new Promise(function (resolve, reject) {\n    return fetch(config.url, {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        redirectUri: config.redirectUri\n      })\n    }).then(function (response) {\n      if (response.ok) {\n        return response.json().then(function (json) {\n          resolve({ window: window, config: config, requestToken: json, dispatch: dispatch });\n        });\n      }\n    });\n  });\n}\n\nfunction pollPopup(_ref3) {\n  var window = _ref3.window,\n      config = _ref3.config,\n      requestToken = _ref3.requestToken,\n      dispatch = _ref3.dispatch;\n\n  return new Promise(function (resolve, reject) {\n    var redirectUri = _url2.default.parse(config.redirectUri);\n    var redirectUriPath = redirectUri.host + redirectUri.pathname;\n\n    if (requestToken) {\n      window.location = config.authorizationUrl + '?' + _querystring2.default.stringify(requestToken);\n    }\n\n    var polling = setInterval(function () {\n      if (!window || window.closed) {\n        clearInterval(polling);\n      }\n      try {\n        var popupUrlPath = window.location.host + window.location.pathname;\n        if (popupUrlPath === redirectUriPath) {\n          if (window.location.search || window.location.hash) {\n            var query = _querystring2.default.parse(window.location.search.substring(1).replace(/\\/$/, ''));\n            var hash = _querystring2.default.parse(window.location.hash.substring(1).replace(/[\\/$]/, ''));\n            var params = Object.assign({}, query, hash);\n\n            if (params.error) {\n              dispatch({\n                type: 'OAUTH_FAILURE',\n                messages: [{ msg: params.error }]\n              });\n            } else {\n              resolve({ oauthData: params, config: config, window: window, interval: polling, dispatch: dispatch });\n            }\n          } else {\n            dispatch({\n              type: 'OAUTH_FAILURE',\n              messages: [{ msg: 'OAuth redirect has occurred but no query or hash parameters were found.' }]\n            });\n          }\n        }\n      } catch (error) {\n        // Ignore DOMException: Blocked a frame with origin from accessing a cross-origin frame.\n        // A hack to get around same-origin security policy errors in Internet Explorer.\n      }\n    }, 500);\n  });\n}\n\nfunction exchangeCodeForToken(_ref4) {\n  var oauthData = _ref4.oauthData,\n      config = _ref4.config,\n      window = _ref4.window,\n      interval = _ref4.interval,\n      dispatch = _ref4.dispatch;\n\n  return new Promise(function (resolve, reject) {\n    var data = Object.assign({}, oauthData, config);\n\n    return fetch(config.url, {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      credentials: 'same-origin', // By default, fetch won't send any cookies to the server\n      body: JSON.stringify(data)\n    }).then(function (response) {\n      if (response.ok) {\n        return response.json().then(function (json) {\n          resolve({ token: json.token, user: json.user, window: window, interval: interval, dispatch: dispatch });\n        });\n      } else {\n        return response.json().then(function (json) {\n          dispatch({\n            type: 'OAUTH_FAILURE',\n            messages: Array.isArray(json) ? json : [json]\n          });\n          closePopup({ window: window, interval: interval });\n        });\n      }\n    });\n  });\n}\n\nfunction signIn(_ref5) {\n  var token = _ref5.token,\n      user = _ref5.user,\n      window = _ref5.window,\n      interval = _ref5.interval,\n      dispatch = _ref5.dispatch;\n\n  return new Promise(function (resolve, reject) {\n    dispatch({\n      type: 'OAUTH_SUCCESS',\n      token: token,\n      user: user\n    });\n    _reactCookie2.default.save('token', token, { expires: (0, _moment2.default)().add(1, 'hour').toDate() });\n    _reactRouter.browserHistory.push('/');\n    resolve({ window: window, interval: interval });\n  });\n}\n\nfunction closePopup(_ref6) {\n  var window = _ref6.window,\n      interval = _ref6.interval;\n\n  return new Promise(function (resolve, reject) {\n    clearInterval(interval);\n    window.close();\n    resolve();\n  });\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ })

})